import streamlit as st
import pandas as pd
from datetime import datetime, timedelta
import altair as alt
import requests # <-- requests kÃ¼tÃ¼phanesini ekleyin

# API URL'sini burada tanÄ±mlayabiliriz veya main.py'den alabiliriz
API_URL = "https://muscletrack.onrender.com"

def app():
    st.title("ðŸ“Š SensÃ¶r Verileri")

    # GiriÅŸ kontrolÃ¼ (token kontrolÃ¼)
    if "token" not in st.session_state:
        st.warning("Bu sayfaya eriÅŸmek iÃ§in giriÅŸ yapmalÄ±sÄ±nÄ±z.")
        st.query_params.update({"page": "login"})
        st.rerun()
        return

    # KullanÄ±cÄ± adÄ± gÃ¶sterimi (varsa)
    if "username" in st.session_state:
        st.subheader(f"Merhaba, **{st.session_state['username']}**!")

    # API'den sensÃ¶r verisi Ã§ekme
    token = st.session_state["token"]
    headers = {"x-access-token": token}

    try:
        response = requests.get(f"{API_URL}/sensor_data", headers=headers)
        if response.status_code == 200:
            data = response.json()
            df = pd.DataFrame(data)

            if not df.empty:
                df["timestamp"] = pd.to_datetime(df["timestamp"])
                df = df.sort_values("timestamp")

                st.success("SensÃ¶r verileri baÅŸarÄ±yla yÃ¼klendi.")

                # Buradan sonrasÄ± mevcut dashboard.py'deki grafik ve tablo mantÄ±ÄŸÄ±
                st.subheader("ðŸ“„ DetaylÄ± SensÃ¶r Verileri")
                st.dataframe(df, use_container_width=True)

                st.subheader("ðŸ“ˆ Zaman Serisi GrafiÄŸi (EMG, Flex, Value)")
                # 'value' sÃ¼tunu eksikse uyarÄ± ver
                columns_to_plot = ["emg", "flex", "value"]
                available_columns = [col for col in columns_to_plot if col in df.columns]

                if available_columns:
                    # Altair ile daha esnek grafik Ã§izimi
                    df_melted = df.melt(id_vars=["timestamp"], value_vars=available_columns, var_name="Sensor Type", value_name="Value")
                    chart = alt.Chart(df_melted).mark_line(point=True).encode(
                        x=alt.X("timestamp", title="Tarih ve Saat"),
                        y=alt.Y("Value", title="SensÃ¶r DeÄŸeri"),
                        color="Sensor Type:N",
                        tooltip=["timestamp", "Sensor Type", "Value"]
                    ).properties(
                        title="SensÃ¶r Verileri Zaman Serisi"
                    ).interactive() # GrafiÄŸi interaktif yap (yakÄ±nlaÅŸtÄ±rma, kaydÄ±rma)
                    st.altair_chart(chart, use_container_width=True)
                else:
                    st.info("Grafik Ã§izilecek sensÃ¶r verisi (emg, flex, value) bulunamadÄ±.")


            else:
                st.info("HenÃ¼z gÃ¶sterilecek sensÃ¶r verisi yok.")

        elif response.status_code == 401:
            st.error("Oturum sÃ¼resi dolmuÅŸ olabilir, lÃ¼tfen tekrar giriÅŸ yapÄ±n.")
            st.session_state.clear()
            st.query_params.update({"page": "login"})
            st.rerun()
            return
        else:
            st.error(f"SensÃ¶r verileri alÄ±namadÄ±. Hata kodu: {response.status_code}")

    except requests.exceptions.RequestException as e:
        st.error(f"Sunucuya baÄŸlanÄ±rken hata oluÅŸtu: {e}")
        st.info("LÃ¼tfen backend API'nizin Ã§alÄ±ÅŸtÄ±ÄŸÄ±ndan emin olun.")



    # AÅŸaÄŸÄ±daki kodlar (eski Ã¶rnek veri oluÅŸturma ve grafikler) kaldÄ±rÄ±labilir veya yorum satÄ±rÄ±na alÄ±nabilir
    # EÄŸer isterseniz, API'den veri gelmediÄŸinde fallback olarak bu Ã¶rnek verileri gÃ¶sterebilirsiniz.
    # Ancak ÅŸimdilik bunlarÄ± kaldÄ±rÄ±yoruz ki kafa karÄ±ÅŸÄ±klÄ±ÄŸÄ± olmasÄ±n ve sadece API verisi kullanÄ±lsÄ±n.
    # --- ESKÄ° Ã–RNEK VERÄ° OLUÅžTURMA KODLARI BURADAN KALDIRILACAK ---
    # Ã–rneÄŸin ÅŸu kÄ±sÄ±mlar:
    # sensor_type = st.radio("SensÃ¶r Tipi SeÃ§", ["EMG Kas SensÃ¶rÃ¼", "Flex SensÃ¶rleri"], horizontal=True)
    # ...
    # df = pd.DataFrame({
    #     "Tarih": dates,
    #     "VÃ¼cut BÃ¶lgesi": [body_part] * len(dates),
    #     "EMG (mV)": ...
    # })
    # ...
    # (veya mevcut mock verileri kullanmaya devam etmek isterseniz, API'den veri gelmediÄŸinde gÃ¶sterirsiniz)
